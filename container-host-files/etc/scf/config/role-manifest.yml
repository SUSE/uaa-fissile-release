---
releases:
- name: cf-mysql
  url: https://bosh.io/d/github.com/cloudfoundry/cf-mysql-release?v=36.15.0
  version: 36.15.0
  sha1: 0764d9d6aae7cefd10019437ed83e7715e614633
- name: uaa
  version: "62.0"
  url: "https://bosh.io/d/github.com/cloudfoundry/uaa-release?v=62.0"
  sha1: "4423bb02d1be2d3c2f212465f4598c9eb62a4b63"
- name: "scf-helper"
  version: "1.0.1"
  url: "https://s3.amazonaws.com/suse-final-releases/scf-helper-release-1.0.1.tgz"
  sha1: "94bb4357cbe5fa07ddeb7efef1d1f7a2af8dfead"

instance_groups:
- name: mysql
  scripts:
  - scripts/create_mysql_data_tmp.sh
  - scripts/chown_vcap_store.sh
  - scripts/patches/fix_mysql_advertise_ip.sh
  - scripts/patches/enable_mysql_galera_bootstrap.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-uaa-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: patch-properties
    release: scf-helper
  - name: mysql
    release: cf-mysql
    provides:
      mysql: {}
    properties:
      bosh_containerization:
        run:
          scaling:
            ha: 2
            min: 1
            max: 3
          capabilities: []
          persistent-volumes:
            - path: /var/vcap/store
              tag: mysql-data
              size: 20
          shared-volumes: []
          memory: 1400
          virtual-cpus: 2
          healthcheck:
            slow_startup: true
            readiness:
              command:
              - curl --silent --fail http://${HOSTNAME}:9200/
              - curl --silent --fail http://${HOSTNAME}:1936/
        ports:
        - name: 'mysql'
          protocol: 'TCP'
          internal: 13306
          public: false
        - name: 'galera-tcp'
          protocol: 'TCP'
          internal: 4567
          public: false
        - name: 'galera-udp'
          protocol: 'UDP'
          internal: 4567
          public: false
        - name: 'galera-ist'
          protocol: 'TCP'
          internal: 4568
          public: false
        - name: 'healthcheck'
          protocol: 'TCP'
          internal: 9200
          public: false
        - name: 'xtrabackup'
          protocol: 'TCP'
          internal: 4444
          public: false
  - name: proxy
    release: cf-mysql
    provides:
      proxy: {}
    properties:
      bosh_containerization:
        ports:
        - name: mysql-proxy
          protocol: TCP
          internal: 3306
        - name: api
          protocol: TCP
          internal: 80
        - name: healthck-proxy
          protocol: TCP
          internal: 1936
  tags:
  - sequential-startup
  configuration:
    templates:
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.cluster_health.password: '((MYSQL_CLUSTER_HEALTH_PASSWORD))'
      properties.cf_mysql.mysql.galera_healthcheck.db_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: "((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))"
      properties.cf_mysql.mysql.seeded_databases: '[{"name":"uaadb", "username": "uaaadmin", "password":"((UAADB_PASSWORD))"}]'
      properties.cf_mysql.proxy.api_password: ((MYSQL_PROXY_ADMIN_PASSWORD))
- name: uaa
  environment_scripts:
  - scripts/log_level_mappings.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/patches/fix_uaa_monit_timeout.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-uaa-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: wait-for-database
    release: scf-helper
  - name: uaa
    release: uaa
    properties:
      bosh_containerization:
        run:
          scaling:
            ha: 2
            min: 1
            max: 65535
          capabilities: []
          persistent-volumes: []
          shared-volumes: []
          memory: 2100
          virtual-cpus: 2
          healthcheck:
            readiness:
              command:
              - "curl --resolve uaa.${DOMAIN}:8443:$(getent hosts ${HOSTNAME} | awk '{ print $1 }') --fail -H \"Host: uaa.${DOMAIN}\" -H 'Accept: application/json' https://uaa.${DOMAIN}:8443/info"
        ports:
        - name: uaa
          protocol: TCP
          external: 8080
          internal: 8080
          public: false
        - name: uaa-ssl
          protocol: TCP
          external: 2793
          internal: 8443
          public: true
  tags:
  - sequential-startup
  configuration:
    templates:
      properties.login.smtp.auth: ((SMTP_AUTH))
      properties.login.smtp.from_address: ((SMTP_FROM_ADDRESS))
      properties.login.smtp.host: ((SMTP_HOST))
      properties.login.smtp.password: ((SMTP_PASSWORD))
      properties.login.smtp.port: ((SMTP_PORT))
      properties.login.smtp.starttls: ((SMTP_STARTTLS))
      properties.login.smtp.user: ((SMTP_USER))
      properties.uaa.logging_level: ((LOG_LEVEL_LOG4J))((#LOG_LEVEL))((/LOG_LEVEL))
      properties.uaadb.roles: '[{"name": "uaaadmin", "password": "((UAADB_PASSWORD))", "tag": "admin"}]'
      properties.wait-for-database.hostname: mysql-set
      properties.wait-for-database.port: 3306
- name: secret-generation
  type: bosh-task
  jobs:
  - name: generate-secrets
    release: scf-helper
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 1
            max: 1
          flight-stage: pre-flight
          capabilities: []
          persistent-volumes: []
          shared-volumes: []
          memory: 256
          virtual-cpus: 1
          service-account: secret-generator
  configuration:
    templates:
      properties.scf.secrets.cert_expiration: ((CERT_EXPIRATION))
      properties.scf.secrets.cluster_domain: ((KUBERNETES_CLUSTER_DOMAIN))
      properties.scf.secrets.domain: ((DOMAIN))
      properties.scf.secrets.generation: ((KUBE_SECRETS_GENERATION_COUNTER))
      properties.scf.secrets.is_install: ((HELM_IS_INSTALL))
      properties.scf.secrets.name: ((KUBE_SECRETS_GENERATION_NAME))
      properties.scf.secrets.namespace: ((KUBERNETES_NAMESPACE))
configuration:
  auth:
    roles:
      configgin-role:
      - apiGroups: [""]
        resources: [pods]
        verbs: [get, list, patch]
      - apiGroups: [""]
        resources: [services]
        verbs: [get]
      - apiGroups: [apps]
        resources: [statefulsets]
        verbs: [get]
      secrets-role:
      - apiGroups: [""]
        resources: [configmaps ,secrets]
        verbs: [create, get, list, patch, update, delete]
    cluster-roles:
      nonprivileged:
      - apiGroups: [extensions]
        resourceNames: [nonprivileged]
        resources: [podsecuritypolicies]
        verbs: [use]
    pod-security-policies:
      nonprivileged:
        fsGroup: { rule: RunAsAny }
        runAsUser: { rule: RunAsAny }
        seLinux: { rule: RunAsAny }
        supplementalGroups: { rule: RunAsAny }
        volumes:
        - configMap
        - secret
        - emptyDir
        - downwardAPI
        - projected
        - persistentVolumeClaim
        - nfs
    accounts:
      default:
        roles: [configgin-role]
        cluster-roles: [nonprivileged]
      secret-generator:
        roles: [configgin-role, secrets-role]
        cluster-roles: [nonprivileged]
  templates:
    index: ((KUBE_COMPONENT_INDEX))((^KUBE_COMPONENT_INDEX))0((/KUBE_COMPONENT_INDEX))
    ip: '"((IP_ADDRESS))"'
    networks.default.dns_record_name: '"((DNS_RECORD_NAME))"'
    networks.default.ip: '"((IP_ADDRESS))"'
    properties.cf_mysql.mysql.advertise_host: mysql-((KUBE_COMPONENT_INDEX)).mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.encryption.encryption_keys: '[{"label":"smorgasbrod","passphrase":"((AEK_PASSWORD))"}]'
    properties.fissile.monit.password: '"((MONIT_PASSWORD))"'
    properties.login.saml.serviceProviderCertificate: '"((SAML_SERVICEPROVIDER_CERT))"'
    properties.login.saml.serviceProviderKey: '"((SAML_SERVICEPROVIDER_CERT_KEY))"'
    properties.login.url: "https://login.((DOMAIN)):2793"
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.clients: '{"default_zone_admin": {"secret": "((UAA_ADMIN_CLIENT_SECRET))", "authorized-grant-types": "client_credentials", "scope": "uaa.admin", "authorities": "uaa.admin"}}'
    properties.uaa.clients.default_zone_admin.secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    # Dummy reference to JWT_SIGNING_CERT so that fissile validator doesn't complain that it is not being used
    properties.uaa.jwt.policy.keys.default.signingKey: ((JWT_SIGNING_CERT_KEY))((#JWT_SIGNING_CERT))((/JWT_SIGNING_CERT))
    # Save INTERNAL_CA cert and key in the kube secrets, so that a future update can use them to sign additional certs
    properties.uaa.sslCertificate: ((UAA_SERVER_CERT))((#INTERNAL_CA_CERT))((/INTERNAL_CA_CERT))
    properties.uaa.sslPrivateKey: ((UAA_SERVER_CERT_KEY))((#INTERNAL_CA_CERT_KEY))((/INTERNAL_CA_CERT_KEY))
    properties.uaa.url: "https://uaa.((DOMAIN)):2793"
    properties.uaa.zones.internal.hostnames: '["uaa","uaa.((KUBERNETES_NAMESPACE))","uaa.((KUBERNETES_NAMESPACE)).svc","uaa.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"]'
variables:
- name: AEK_PASSWORD
  options:
    secret: true
    immutable: true
    description: Password used for the active uaa encryption key.
  type: password
- name: CERT_EXPIRATION
  options:
    description: Expiration for generated certificates (in days)
    default: 10950
- name: DOMAIN
  options:
    description: 'Base domain name of the UAA endpoint; `uaa.${DOMAIN}` must be correctly
      configured to point to this UAA instance

'
    required: true
- name: HELM_IS_INSTALL
  options:
    type: environment
    description: >
      This is an environment variable built-in by fissile.
      It's set directly from the Release.IsInstall Helm property.
- name: INTERNAL_CA_CERT
  options:
    secret: true
    is_ca: true
    description: PEM-encoded CA certificate used to sign the TLS certificate used
      by all components to secure their communications.
    required: true
  type: certificate
- name: INTERNAL_CA_CERT_KEY
  options:
    secret: true
    description: PEM-encoded CA key.
    required: true
- name: JWT_SIGNING_CERT
  options:
    secret: true
    is_ca: true
    description: PEM-encoded JWT certificate.
    required: true
  type: certificate
- name: JWT_SIGNING_CERT_KEY
  options:
    secret: true
    description: PEM-encoded JWT signing key.
    required: true
- name: KUBERNETES_CLUSTER_DOMAIN
  options:
    type: environment
    description: >
      The cluster domain used by Kubernetes.
      If left empty, each container will try to determine the correct value based on /etc/resolv.conf
      You can read more about it in the Kubernetes Documentation https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
- name: KUBERNETES_NAMESPACE
  options:
    type: environment
    description: 'The name of the kubernetes namespace all components will run in.
      This parameter cannot be set by the user. Its value is supplied by the kubernetes
      runtime.

'
- name: KUBE_COMPONENT_INDEX
  options:
    type: environment
    description: >
      This is an environment variable built-in by fissile.
      It's set to a numeric index for roles with multiple replicas.
- name: KUBE_SECRETS_GENERATION_COUNTER
  options:
    type: environment
    description: >
      This is an environment variable built-in by fissile.
      It's automatically set to the kube.secrets_generation_counter Helm value, which controls secret rotation.
- name: KUBE_SECRETS_GENERATION_NAME
  options:
    type: environment
    description: >
      This is an environment variable built-in by fissile.
      Its default value is 'secret-1' and cannot be set by the user.
- name: LOG_LEVEL
  options:
    default: info
    description: 'The cluster''s log level: off, fatal, error, warn, info, debug,
      debug1, debug2.'
    required: true
- name: LOG_LEVEL_LOG4J
  options:
    type: environment
    description: 'The log level for Log4j-using components.  This parameter is not
      supposed to be set by the user.  To change the cluster''s log level set the
      parameter `LOG_LEVEL` above instead, from which this one is derived.

'
- name: MONIT_PASSWORD
  options:
    secret: true
    description: Password used for the monit API.
  type: password
- name: MYSQL_ADMIN_PASSWORD
  options:
    secret: true
    description: The password for the MySQL server admin user.
    required: true
  type: password
- name: MYSQL_CLUSTER_HEALTH_PASSWORD
  options:
    secret: true
    description: The password for the cluster logger health user.
    required: true
  type: password
- name: MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD
  options:
    secret: true
    description: The password used to contact the sidecar endpoints via Basic Auth.
    required: true
  type: password
- name: MYSQL_PROXY_ADMIN_PASSWORD
  options:
    secret: true
    description: The password for Basic Auth used to secure the MySQL proxy API.
    required: true
  type: password
- name: SAML_SERVICEPROVIDER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded certificate
  type: certificate
- name: SAML_SERVICEPROVIDER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key.
- name: SCF_LOG_HOST
  options:
    internal: true
    description: The log destination to talk to. This has to point to a syslog server.
- name: SCF_LOG_PORT
  options:
    internal: true
    description: The port used by rsyslog to talk to the log destination. It defaults
      to 514, the standard port of syslog.
    default: 514
- name: SCF_LOG_PROTOCOL
  options:
    internal: true
    default: tcp
    description: The protocol used by rsyslog to talk to the log destination. The
      allowed values are tcp, and udp. The default is tcp.
    required: true
- name: SMTP_AUTH
  options:
    default: false
    description: >
      If true, authenticate against the SMTP server using AUTH command.
      See https://javamail.java.net/nonav/docs/api/com/sun/mail/smtp/package-summary.html
- name: SMTP_FROM_ADDRESS
  options:
    description: SMTP from address, for password reset emails etc.
- name: SMTP_HOST
  options:
    description: SMTP server host address, for password reset emails etc.
- name: SMTP_PASSWORD
  options:
    description: SMTP server password, for password reset emails etc.
- name: SMTP_PORT
  options:
    default: 25
    description: SMTP server port, for password reset emails etc.
- name: SMTP_STARTTLS
  options:
    default: false
    description: >
      If true, send STARTTLS command before logging in to SMTP server.
      See https://javamail.java.net/nonav/docs/api/com/sun/mail/smtp/package-summary.html
- name: SMTP_USER
  options:
    description: SMTP server username, for password reset emails etc.
- name: UAADB_PASSWORD
  options:
    secret: true
    description: The password for access to the UAA database.
  type: password
- name: UAA_ADMIN_CLIENT_SECRET
  options:
    secret: true
    description: The password of the admin client - a client named admin with uaa.admin
      as an authority.
    required: true
- name: UAA_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: uaa
    alternative_names:
    - uaa.{{.DOMAIN}}
    - "*.uaa.{{.DOMAIN}}"
    description: The server's ssl certificate. The default is a self-signed certificate
      and should always be replaced for production deployments.
  type: certificate
- name: UAA_SERVER_CERT_KEY
  options:
    secret: true
    description: The server's ssl private key. Only passphrase-less keys are supported.
