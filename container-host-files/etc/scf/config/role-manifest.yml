---
instance_groups:
- name: mysql
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/create_mysql_data_tmp.sh
  - scripts/chown_vcap_store.sh
  - scripts/patches/fix_mysql_advertise_ip.sh
  - scripts/patches/enable_mysql_galera_bootstrap.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-uaa-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: patch-properties
    release: scf-helper
  - name: mysql
    release: cf-mysql
    provides:
      mysql: {}
    properties:
      bosh_containerization:
        ports:
        - name: 'mysql'
          protocol: 'TCP'
          internal: 13306
          public: false
        - name: 'galera-tcp'
          protocol: 'TCP'
          internal: 4567
          public: false
        - name: 'galera-udp'
          protocol: 'UDP'
          internal: 4567
          public: false
        - name: 'galera-ist'
          protocol: 'TCP'
          internal: 4568
          public: false
        - name: 'healthcheck'
          protocol: 'TCP'
          internal: 9200
          public: false
        - name: 'xtrabackup'
          protocol: 'TCP'
          internal: 4444
          public: false
  - name: proxy
    release: cf-mysql
    provides:
      proxy: {}
    properties:
      bosh_containerization:
        ports:
        - name: mysql-proxy
          protocol: TCP
          internal: 3306
        - name: api
          protocol: TCP
          internal: 80
        - name: healthck-proxy
          protocol: TCP
          internal: 1936
  tags:
  - sequential-startup
  processes:
  - name: mariadb_ctrl
  - name: galera-healthcheck
  - name: gra-log-purger-executable
  run:
    scaling:
      ha: 2
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: mysql-data
        size: 20
    shared-volumes: []
    memory: 1900
    virtual-cpus: 2
    healthcheck:
      slow_startup: true
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:9200/
        - curl --silent --fail http://${HOSTNAME}:1936/
  configuration:
    templates:
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.cluster_health.password: '((MYSQL_CLUSTER_HEALTH_PASSWORD))'
      properties.cf_mysql.mysql.galera_healthcheck.db_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: "((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))"
      properties.cf_mysql.mysql.seeded_databases: '[{"name":"uaadb", "username": "uaaadmin", "password":"((UAADB_PASSWORD))"}]'
      properties.cf_mysql.proxy.api_password: ((MYSQL_PROXY_ADMIN_PASSWORD))
- name: uaa
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/log_level_mappings.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/patches/fix_uaa_monit_timeout.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-uaa-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: wait-for-database
    release: scf-helper
  - name: uaa
    release: uaa
    properties:
      bosh_containerization:
        ports:
        - name: uaa
          protocol: TCP
          external: 8080
          internal: 8080
          public: false
        - name: uaa-ssl
          protocol: TCP
          external: 2793
          internal: 8443
          public: true
  processes:
  - uaa
  tags:
  - sequential-startup
  run:
    scaling:
      ha: 2
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 2205
    virtual-cpus: 2
    healthcheck:
      readiness:
        command:
        - "curl --resolve uaa:8443:$(getent hosts ${HOSTNAME} | awk '{ print $1 }') --fail -H 'Host: uaa' -H 'Accept: application/json' https://uaa:8443/info"
  configuration:
    templates:
      properties.uaa.logging_level: ((LOG_LEVEL_LOG4J))((#LOG_LEVEL))((/LOG_LEVEL))
      properties.uaadb.roles: '[{"name": "uaaadmin", "password": "((UAADB_PASSWORD))", "tag": "admin"}]'
      properties.wait-for-database.hostname: mysql-set
      properties.wait-for-database.port: 3306
- name: secret-generation
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  type: bosh-task
  jobs:
  - name: generate-secrets
    release: scf-helper
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: pre-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    service-account: secret-generator
  configuration:
    templates:
      properties.scf.secrets.cert_expiration: ((CERT_EXPIRATION))
      properties.scf.secrets.cluster_domain: ((KUBERNETES_CLUSTER_DOMAIN))
      properties.scf.secrets.domain: ((DOMAIN))
      properties.scf.secrets.generation: ((KUBE_SECRETS_GENERATION_COUNTER))
      properties.scf.secrets.is_install: ((HELM_IS_INSTALL))
      properties.scf.secrets.name: ((KUBE_SECRETS_GENERATION_NAME))
      properties.scf.secrets.namespace: ((KUBERNETES_NAMESPACE))
configuration:
  auth:
    roles:
      configgin-role:
      - apiGroups: [""]
        resources: [pods]
        verbs: [get, list, patch]
      - apiGroups: [""]
        resources: [services]
        verbs: [get]
      - apiGroups: [apps]
        resources: [statefulsets]
        verbs: [get]
      secrets-role:
      - apiGroups: [""]
        resources: [configmaps ,secrets]
        verbs: [create, get, list, patch, update, delete]
    accounts:
      default:
        roles: [configgin-role]
      secret-generator:
        roles: [configgin-role, secrets-role]
  templates:
    index: ((KUBE_COMPONENT_INDEX))((^KUBE_COMPONENT_INDEX))0((/KUBE_COMPONENT_INDEX))
    ip: '"((IP_ADDRESS))"'
    networks.default.dns_record_name: '"((#KUBE_COMPONENT_NAME))((KUBE_COMPONENT_NAME))((/KUBE_COMPONENT_NAME))((^KUBE_COMPONENT_NAME))((DNS_RECORD_NAME))((/KUBE_COMPONENT_NAME))"'
    networks.default.ip: '"((IP_ADDRESS))"'
    properties.cf_mysql.mysql.advertise_host: mysql-((KUBE_COMPONENT_INDEX)).mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.encryption.encryption_keys: '[{"label":"smorgasbrod","passphrase":"((AEK_PASSWORD))"}]'
    properties.fissile.monit.password: '"((MONIT_PASSWORD))"'
    properties.login.saml.serviceProviderCertificate: '"((SAML_SERVICEPROVIDER_CERT))"'
    properties.login.saml.serviceProviderKey: '"((SAML_SERVICEPROVIDER_CERT_KEY))"'
    properties.login.url: "https://login.((DOMAIN)):2793"
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.clients: '{"default_zone_admin": {"secret": "((UAA_ADMIN_CLIENT_SECRET))", "authorized-grant-types": "client_credentials", "scope": "uaa.admin", "authorities": "uaa.admin"}}'
    properties.uaa.clients.default_zone_admin.secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    # Dummy reference to JWT_SIGNING_CERT so that fissile validator doesn't complain that it is not being used
    properties.uaa.jwt.policy.keys.default.signingKey: ((JWT_SIGNING_CERT_KEY))((#JWT_SIGNING_CERT))((/JWT_SIGNING_CERT))
    # Save INTERNAL_CA cert and key in the kube secrets, so that a future update can use them to sign additional certs
    properties.uaa.sslCertificate: ((UAA_SERVER_CERT))((#INTERNAL_CA_CERT))((/INTERNAL_CA_CERT))
    properties.uaa.sslPrivateKey: ((UAA_SERVER_CERT_KEY))((#INTERNAL_CA_CERT_KEY))((/INTERNAL_CA_CERT_KEY))
    properties.uaa.url: "https://uaa.((DOMAIN)):2793"
    properties.uaa.zones.internal.hostnames: '["uaa","uaa.((KUBERNETES_NAMESPACE))","uaa.((KUBERNETES_NAMESPACE)).svc","uaa.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"]'
variables:
- name: AEK_PASSWORD
  options:
    secret: true
    immutable: true
    description: Password used for the active uaa encryption key.
  type: password
- name: CERT_EXPIRATION
  options:
    description: Expiration for generated certificates (in days)
    default: 10950
- name: DOMAIN
  options:
    description: 'Base domain name of the UAA endpoint; `uaa.${DOMAIN}` must be correctly
      configured to point to this UAA instance

'
    required: true
- name: HELM_IS_INSTALL
  options:
    type: environment
- name: INTERNAL_CA_CERT
  options:
    secret: true
    is_ca: true
    description: PEM-encoded CA certificate used to sign the TLS certificate used
      by all components to secure their communications.
    required: true
  type: certificate
- name: INTERNAL_CA_CERT_KEY
  options:
    secret: true
    description: PEM-encoded CA key.
    required: true
- name: JWT_SIGNING_CERT
  options:
    secret: true
    is_ca: true
    description: PEM-encoded JWT certificate.
    required: true
  type: certificate
- name: JWT_SIGNING_CERT_KEY
  options:
    secret: true
    description: PEM-encoded JWT signing key.
    required: true
- name: KUBERNETES_CLUSTER_DOMAIN
  options:
    type: environment
- name: KUBERNETES_NAMESPACE
  options:
    type: environment
- name: KUBE_COMPONENT_INDEX
  options:
    type: environment
- name: KUBE_COMPONENT_NAME
  options:
    type: environment
- name: KUBE_SECRETS_GENERATION_COUNTER
  options:
    type: environment
- name: KUBE_SECRETS_GENERATION_NAME
  options:
    type: environment
- name: LOG_LEVEL
  options:
    default: info
    description: 'The cluster''s log level: off, fatal, error, warn, info, debug,
      debug1, debug2.'
    required: true
- name: LOG_LEVEL_LOG4J
  options:
    type: environment
    description: 'The log level for Log4j-using components.  This parameter is not
      supposed to be set by the user.  To change the cluster''s log level set the
      parameter `LOG_LEVEL` above instead, from which this one is derived.

'
- name: MONIT_PASSWORD
  options:
    secret: true
    description: Password used for the monit API.
  type: password
- name: MYSQL_ADMIN_PASSWORD
  options:
    secret: true
    description: The password for the MySQL server admin user.
    required: true
  type: password
- name: MYSQL_CLUSTER_HEALTH_PASSWORD
  options:
    secret: true
    description: The password for the cluster logger health user.
    required: true
  type: password
- name: MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD
  options:
    secret: true
    description: The password used to contact the sidecar endpoints via Basic Auth.
    required: true
  type: password
- name: MYSQL_PROXY_ADMIN_PASSWORD
  options:
    secret: true
    description: The password for Basic Auth used to secure the MySQL proxy API.
    required: true
  type: password
- name: SAML_SERVICEPROVIDER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded certificate
  type: certificate
- name: SAML_SERVICEPROVIDER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key.
- name: SCF_LOG_HOST
  options:
    internal: true
    description: The log destination to talk to. This has to point to a syslog server.
- name: SCF_LOG_PORT
  options:
    internal: true
    description: The port used by rsyslog to talk to the log destination. It defaults
      to 514, the standard port of syslog.
    default: 514
- name: SCF_LOG_PROTOCOL
  options:
    internal: true
    default: tcp
    description: The protocol used by rsyslog to talk to the log destination. The
      allowed values are tcp, and udp. The default is tcp.
    required: true
- name: UAADB_PASSWORD
  options:
    secret: true
    description: The password for access to the UAA database.
  type: password
- name: UAA_ADMIN_CLIENT_SECRET
  options:
    secret: true
    description: The password of the admin client - a client named admin with uaa.admin
      as an authority.
    required: true
- name: UAA_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: uaa
    alternative_names:
    - uaa.{{.DOMAIN}}
    - "*.uaa.{{.DOMAIN}}"
    description: The server's ssl certificate. The default is a self-signed certificate
      and should always be replaced for production deployments.
  type: certificate
- name: UAA_SERVER_CERT_KEY
  options:
    secret: true
    description: The server's ssl private key. Only passphrase-less keys are supported.
