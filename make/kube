#!/usr/bin/env bash

set -o errexit -o nounset

GIT_ROOT=${GIT_ROOT:-$(git rev-parse --show-toplevel)}
cd "${GIT_ROOT}"
source .envrc

if [ -z "${APP_VERSION:-}" ]; then
  echo "APP_VERSION is not set"
  exit 1
fi

DOMAIN=${DOMAIN:-}
DEFAULTS_ENV=env/defaults.env
if test -n "${DOMAIN}"; then
    TMP="$(mktemp -d)"
    cp "${DEFAULTS_ENV}" "${TMP}"
    trap "rm -rf ${TMP}" EXIT
    DEFAULTS_ENV="${TMP}/$(basename "${DEFAULTS_ENV}")"
    sed -i "s/^DOMAIN=.*/DOMAIN=${DOMAIN}/" "${DEFAULTS_ENV}"
fi
ENV_FILES="$DEFAULTS_ENV"

CREATE_HELM_CHART=false
BUILD_TARGET=kube
USE_SECRETS_GENERATOR=

if [ "${1:-}" = "helm" ]; then
    CREATE_HELM_CHART=true
    BUILD_TARGET=helm
    USE_SECRETS_GENERATOR=--use-secrets-generator
    ENV_FILES=
fi

rm -rf "${BUILD_TARGET}"

# TODO: We currently skip memory limits for development purposes
fissile build "${BUILD_TARGET}" \
    --output-dir="${BUILD_TARGET}" \
    --defaults-file="$(echo "${ENV_FILES}" | tr ' ' ,)" \
    --use-memory-limits=false \
    "${USE_SECRETS_GENERATOR}"

if [ "${BUILD_TARGET}" = "helm" ]; then
    chart_name_suffix=""
    if [[ $FISSILE_STEMCELL =~ ^.*fissile-stemcell-opensuse.*$ ]] ; then
      chart_name_suffix="-opensuse"
    fi

    cat > "${BUILD_TARGET}/Chart.yaml" << EOF
apiVersion: ${APP_VERSION}
description: A Helm chart for SUSE UAA
name: uaa${chart_name_suffix}
version: ${GIT_TAG}
EOF
fi
