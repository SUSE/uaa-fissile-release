#!/usr/bin/env bash

set -o errexit -o nounset

GIT_ROOT=${GIT_ROOT:-$(git rev-parse --show-toplevel)}
NAMESPACE="uaa"

supports_psp() {
    kubectl get podsecuritypolicy -o name >/dev/null 2>/dev/null
}

has_namespace() {
    kubectl get namespace --output=name "${NAMESPACE}" >/dev/null 2>/dev/null
}

stampy "${GIT_ROOT}/uaa_metrics.csv" "$0" make-run start

stampy "${GIT_ROOT}/uaa_metrics.csv" "$0" make-run::namespace start
if has_namespace ; then
    kubectl delete namespace "${NAMESPACE}"
fi

printf "Waiting for namespace %s to be deleted...\n" "${NAMESPACE}"
while has_namespace ; do
    sleep 1
done

kubectl create namespace "${NAMESPACE}"
stampy "${GIT_ROOT}/uaa_metrics.csv" "$0" make-run::namespace end

stampy "${GIT_ROOT}/uaa_metrics.csv" "$0" make-run::create start

kubectl get storageclass | grep --silent '(default)' 2>/dev/null || {
    perl -p -e 's@storage.k8s.io/v1beta1@storage.k8s.io/v1@g' \
        "${GIT_ROOT}/kube-test/storage-class-host-path.yml" | \
    kubectl create -f -
}
STORAGE_CLASS="${STORAGE_CLASS:=$(kubectl get storageclass 2>/dev/null | awk '/(default)/ { print $1 ; exit }')}"

DOMAIN=${DOMAIN:-cf-dev.io}

helm_args=(
    --name "${NAMESPACE}"
    --namespace "${NAMESPACE}"
    --values "../../bin/settings.yaml"
    --set "env.DOMAIN=${DOMAIN}"
    --set "kube.storage_class.persistent=${STORAGE_CLASS}"
)

if [ -n "${INGRESS_CONTROLLER:-}" ]; then
    helm_args+=(
        --set "ingress.enabled=true"
        --set "ingress.annotations.kubernetes\.io\/ingress\.class=${INGRESS_CONTROLLER}"
        --set "env.UAA_PUBLIC_PORT=443"
    )
else
    helm_args+=(
        --set "kube.external_ips[0]=$(getent hosts "${DOMAIN}" | awk 'NR=1{print $1}')"
    )
fi

if supports_psp ; then
    psp_privileged="$(kubectl get podsecuritypolicy -o json | jq -r '
            [
                .items[] |
                select(
                    .spec.allowedCapabilities // [] |
                    contains(["*"])
                )
            ] |
            first | .metadata.name
            // ""
        ')"
    psp_nonprivileged="$(kubectl get podsecuritypolicy -o json | jq -r '
            [
                .items[] |
                select(
                    .spec.allowedCapabilities // [] |
                    contains(["*"]) |
                    not
                )
            ] |
            first | .metadata.name
            // ""
        ')"
    if [ -n "${psp_privileged}" ] ; then
        helm_args+=(
            --set "kube.psp.privileged=${psp_privileged}"
            --set "kube.psp.nonprivileged=${psp_nonprivileged:-${psp_privileged}}"
        )
    fi
fi

helm install helm "${helm_args[@]}" "$@"

stampy "${GIT_ROOT}/uaa_metrics.csv" "$0" make-run::create end

stampy "${GIT_ROOT}/uaa_metrics.csv" "$0" make-run 'done'
